<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zerozys.github.io</id>
    <title>Zerozys</title>
    <updated>2019-07-07T07:46:32.922Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zerozys.github.io"/>
    <link rel="self" href="https://zerozys.github.io/atom.xml"/>
    <subtitle>或许是不知梦的缘故，流离之人追逐幻影。</subtitle>
    <logo>https://zerozys.github.io/images/avatar.png</logo>
    <icon>https://zerozys.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Zerozys</rights>
    <entry>
        <title type="html"><![CDATA[Linux常用命令（持续更新中）]]></title>
        <id>https://zerozys.github.io/post/2019-07-03-linux0</id>
        <link href="https://zerozys.github.io/post/2019-07-03-linux0">
        </link>
        <updated>2019-07-03T08:09:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tar命令">tar命令</h3>
<p>tar命令可以把一大堆文件和目录打包成一个文件</p>
<h4 id="打包和压缩">打包和压缩</h4>
<p>打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过压缩算法变成一个小文件。</p>
<h4 id="打包命令格式">打包命令格式</h4>
<pre><code>[root@localhost ~]# tar [选项] [-f 压缩包名] 源文件或目录
</code></pre>
<p>选项：</p>
<ul>
<li>-c：打包；</li>
<li>-f：指定文件名，注意要正确指定扩展名；</li>
<li>-v：显式打包文件的过程</li>
</ul>
<h4 id="解打包命令格式">解打包命令格式</h4>
<pre><code>[root@localhost ~]# tar [选项] 压缩包
</code></pre>
<p>选项：</p>
<ul>
<li>-x：解打包</li>
<li>-f：指定文件名</li>
<li>-v：显示过程</li>
<li>-t：列出文件内容</li>
<li>-C：目录，指定解打包的位置</li>
</ul>
<h4 id="targz-和-tarbz2-格式">.tar.gz 和 .tar.bz2 格式</h4>
<pre><code>[root@localhost ~]# tar [选项] 压缩包 源文件或目录
</code></pre>
<p>选项：</p>
<ul>
<li>-z：压缩和解压缩成&quot;.tar.gz&quot;格式</li>
<li>-j：压缩和解压缩成&quot;.tar.bz2&quot;格式</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次MySQL被黑的经历]]></title>
        <id>https://zerozys.github.io/post/ji-yi-ci-mysql-bei-hei-de-jing-li</id>
        <link href="https://zerozys.github.io/post/ji-yi-ci-mysql-bei-hei-de-jing-li">
        </link>
        <updated>2019-07-03T04:43:04.000Z</updated>
        <content type="html"><![CDATA[<p>前两天做项目时突然发现云服务器上MySQL里的项目数据库消失了，一开始没有放在心上，直到今天突然发现多了一个<code>PLEASE_READ_ME_VVV</code> 的数据库，里面只有一张 <code>WARNING</code> 表，有如下信息：</p>
<pre><code>To recover your lost Database and avoid leaking it: Send us 0.03 Bitcoin (BTC) to our Bitcoin address 1sWNYrhmKd78xmYNcnqc79MSDVwT2mqD8 and contact us by Email with your Server IP or Domain name and a Proof of Payment. Your Database is downloaded and backed up on our servers. Backups that we have right now: books, jparestful, vhr. Any email without your server IP Address or ...
</code></pre>
<p>看样子，我是被比特币勒索了，除此之外，在叫做mysql的库中发现多了许多后缀为32的表，共同点是只有一个为blob类型的data字段。打开是一串二进制字符串。没办法，只能卸载并重装了，特地记录一下卸载重装并采取一些安全措施的经过。</p>
<h3 id="centos68-彻底删除mysql">CentOS6.8 彻底删除MySQL</h3>
<p>之前是 rpm 包安装的MySQL</p>
<ol>
<li>
<p>查看系统中是否以rpm包安装的MySQL</p>
<pre><code>[root@VM_0_13_centos /]# rpm -qa | grep -i mysql
mysql-community-client-8.0.16-2.el6.x86_64
mysql-community-server-8.0.16-2.el6.x86_64
</code></pre>
</li>
<li>
<p>卸载mysql</p>
<pre><code class="language-latex">[root@VM_0_13_centos /]# rpm -e mysql-community-client-8.0.16-2.el6.x86_64
[root@VM_0_13_centos /]# rpm -e mysql-community-server-8.0.16-2.el6.x86_64
</code></pre>
</li>
<li>
<p>删除MySQL服务</p>
<pre><code># chkconfig --list | grep -i mysql
# chkconfig --del mysql
</code></pre>
</li>
<li>
<p>删除分散的MySQL文件夹</p>
<pre><code>whereis mysql 或者 find / -name mysql*
将所有目录及文件 rm -rf 掉
</code></pre>
</li>
</ol>
<p>通过以上几步，MySQL应该完全卸载干净了</p>
<h3 id="centos68-rpm-方式安装-mysql8">CentOS6.8 rpm 方式安装 MySQL8</h3>
<ol>
<li>
<p>进入官网下载 <a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a>
<img src="https://zerozys.github.io/post-images/1562140790073.png" alt="">
注意选择对应的操作系统和操作系统版本，我的是CentOS6.8，所以如上选择，下载后上传到服务器上，我选择新建/usr/local/mysql 并放在这个目录下</p>
</li>
<li>
<p>进入该目录下，解压安装</p>
<pre><code>cd /usr/local/mysql
tar -xvf mysql-8.0.16-2.el6.x86_64.rpm-bundle.tar
安装
rpm -ivh mysql-community-server-8.0.16-2.el6.x86_64.rpm --force --nodeps
rpm -ivh mysql-community-client-8.0.16-2.el6.x86_64.rpm --force --nodeps
</code></pre>
</li>
<li>
<p>启动MySQL服务</p>
<pre><code>service mysqld start      // 启动
service mysqld stop       // 关闭
service mysqld restart    // 重启
</code></pre>
<p>可能之前我安装过MySQL的缘故，第一次启动报错了</p>
<p><img src="https://zerozys.github.io/post-images/1562140819234.png" alt=""></p>
<p>这里我们不慌，<strong>打印一下MySQL的日志</strong>找一下错误出在哪</p>
<p><code>cat /var/log/mysqld.log</code></p>
<p><img src="https://zerozys.github.io/post-images/1562140836731.png" alt=""></p>
<p>提示我3306被占用是否有另外的MySQL服务在运行</p>
<p>使用命令<code>netstat -apn | grep 3306</code> 查一下端口</p>
<p><img src="https://zerozys.github.io/post-images/1562140860328.png" alt=""></p>
<p><code>kill -9 24688</code> 再次启动MySQL服务，发现成功启动了</p>
</li>
<li>
<p>将MySQL服务加到系统服务中，自动启动</p>
<pre><code>chkconfig --add mysqld
chkconfig mysqld on
</code></pre>
</li>
<li>
<p>因为MySQL会自动为root账户创建一个随机密码，我们需要在MySQL里面来修改，因此我们先设置为不用密码登录，再进去修改密码</p>
<p><code>vi /etc/my.cnf</code> 在最后添加一句 <code>skip-grant-tables</code> 和 <code>default_authentication_plugin=mysql_native_password</code> (这个是修改认证方式，8.0之前版本是默认的，8.0之后需要手动修改)</p>
<p><code>service mysqld restart</code> 重启一下</p>
</li>
<li>
<p>输入<code>mysql</code> 进入，设置密码</p>
<pre><code class="language-sql">set global validate_password.policy = 0;
flush privileges;
ALTER USER 'root'@'localhost' IDENTIFIED BY '你的密码';
</code></pre>
</li>
<li>
<p>修改完成后把/etc/my.cnf中添加的skip-grant-tables删掉，然后再重新启动mysql服务就OK了。</p>
<p><code>mysql -uroot -p</code> 再输入密码即可</p>
</li>
<li>
<p>开启MySQL远程连接</p>
<pre><code class="language-sql">update user set host='%' where user='root';
flush privileges;
</code></pre>
</li>
<li>
<p>开放linux的对外访问的端口3306，保存</p>
<pre><code>[root@VM_0_13_centos local]# iptables -A INPUT -p tcp --dport 3306 -j ACCEPT
[root@VM_0_13_centos local]# iptables -A OUTPUT -p tcp --dport 3306 -j ACCEPT
[root@VM_0_13_centos local]# service iptables save
</code></pre>
</li>
<li>
<p>navicat 成功连接</p>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[java]]></title>
        <id>https://zerozys.github.io/post/java</id>
        <link href="https://zerozys.github.io/post/java">
        </link>
        <updated>2019-07-02T02:10:12.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>java</li>
<li>java</li>
<li>java</li>
<li>java</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://zerozys.github.io/post/hello-gridea</id>
        <link href="https://zerozys.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>